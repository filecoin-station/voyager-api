name: CI
on: [push]
jobs:
  build-api:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm test

  build-publish:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/postgres
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm ci
      - run: npm run migrate
      - run: cd voyager-publish && npm ci
      - run: cd voyager-publish && npm test

  docker-build-api:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          cache-from: type=registry,ref=ghcr.io/filecoin-station/core
          cache-to: type=inline

  docker-build-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    env:
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v4

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: voyager-publish
          cache-from: type=registry,ref=ghcr.io/filecoin-station/core
          cache-to: type=inline

  # FIXME
  # deploy-api:
  #   if: github.ref == 'refs/heads/main'
  #   needs: [build-api, build-publish, docker-build-api, docker-build-publish]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: superfly/flyctl-actions/setup-flyctl@master
  #     - run: flyctl deploy --remote-only
  #       env:
  #         FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  #     - if: failure()
  #       uses: slackapi/slack-github-action@v1.26.0
  #       with:
  #         channel-id: filecoin-station-incidents
  #         payload: |
  #           {
  #             "text": "Deployment of `${{ github.event.repository.name }}` failed",
  #             "blocks": [
  #               {
  #                 "type": "section",
  #                 "text": {
  #                   "type": "mrkdwn",
  #                   "text": ":warning: *<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Deployment of `${{ github.event.repository.name }}` failed>*"
  #                 }
  #               }
  #             ]
  #           }
  #       env:
  #         SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
  deploy-publish:
    if: github.ref == 'refs/heads/main'
    needs: [build-api, build-publish, docker-build-api, docker-build-publish]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - run: cd voyager-publish && flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN_PUBLISH }}
      - if: failure()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: filecoin-station-incidents
          payload: |
            {
              "text": "Deployment of `${{ github.event.repository.name }}` failed",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":warning: *<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Deployment of `${{ github.event.repository.name }}` failed>*"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
